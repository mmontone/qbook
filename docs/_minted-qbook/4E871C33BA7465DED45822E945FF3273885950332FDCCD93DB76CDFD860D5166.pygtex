\begin{Verbatim}[commandchars=\\\{\}]
\PYG{p}{(}\PYG{k}{eval\PYGZhy{}when} \PYG{p}{(}\PYG{l+s+ss}{:compile\PYGZhy{}toplevel} \PYG{l+s+ss}{:load\PYGZhy{}toplevel} \PYG{l+s+ss}{:execute}\PYG{p}{)}
  \PYG{p}{(}\PYG{n+nv}{yaclml:deftag\PYGZhy{}macro} \PYG{n+nv}{\PYGZlt{}qbook\PYGZhy{}page} \PYG{p}{(}\PYG{n+nv}{\PYGZam{}attribute} \PYG{n+nv}{title} \PYG{n+nv}{file\PYGZhy{}name} \PYG{p}{(}\PYG{n+nv}{stylesheet} \PYG{l+s}{\PYGZdq{}style.css\PYGZdq{}}\PYG{p}{)}
                                               \PYG{p}{(}\PYG{n+nv}{printsheet} \PYG{l+s}{\PYGZdq{}print.css\PYGZdq{}}\PYG{p}{)}
                                               \PYG{k}{\PYGZam{}body} \PYG{n+nv}{body}\PYG{p}{)}
    \PYG{o}{`}\PYG{p}{(}\PYG{n+nv}{with\PYGZhy{}output\PYGZhy{}to\PYGZhy{}file} \PYG{p}{(}\PYG{n+nv+vg}{*yaclml\PYGZhy{}stream*}
                           \PYG{p}{(}\PYG{n+nb}{ensure\PYGZhy{}directories\PYGZhy{}exist} \PYG{p}{(}\PYG{n+nb}{merge\PYGZhy{}pathnames} \PYG{o}{,}\PYG{n+nv}{file\PYGZhy{}name} \PYG{p}{(}\PYG{n+nv}{output\PYGZhy{}directory} \PYG{n+nv+vg}{*generator*}\PYG{p}{)))}
                           \PYG{l+s+ss}{:if\PYGZhy{}exists} \PYG{l+s+ss}{:supersede}
                           \PYG{l+s+ss}{:if\PYGZhy{}does\PYGZhy{}not\PYGZhy{}exist} \PYG{l+s+ss}{:create}\PYG{p}{)}
       \PYG{p}{(}\PYG{n+nv}{\PYGZlt{}:html}
        \PYG{p}{(}\PYG{n+nv}{\PYGZlt{}:head}
         \PYG{p}{(}\PYG{n+nv}{\PYGZlt{}:title} \PYG{p}{(}\PYG{n+nv}{\PYGZlt{}:as\PYGZhy{}html} \PYG{o}{,}\PYG{n+nv}{title}\PYG{p}{))}
         \PYG{p}{(}\PYG{n+nv}{\PYGZlt{}:meta} \PYG{l+s+ss}{:http\PYGZhy{}equiv} \PYG{l+s}{\PYGZdq{}Content\PYGZhy{}Type\PYGZdq{}} \PYG{l+s+ss}{:content} \PYG{l+s}{\PYGZdq{}text/html; charset=utf\PYGZhy{}8\PYGZdq{}}\PYG{p}{)}
         \PYG{p}{(}\PYG{n+nv}{\PYGZlt{}:stylesheet} \PYG{o}{,}\PYG{n+nv}{stylesheet}\PYG{p}{)}
         \PYG{p}{(}\PYG{n+nv}{\PYGZlt{}:link} \PYG{l+s+ss}{:rel} \PYG{l+s}{\PYGZdq{}alternate stylesheet\PYGZdq{}} \PYG{l+s+ss}{:href} \PYG{o}{,}\PYG{n+nv}{printsheet} \PYG{l+s+ss}{:title} \PYG{l+s}{\PYGZdq{}Print\PYGZdq{}}\PYG{p}{)}
         \PYG{p}{(}\PYG{n+nb}{when} \PYG{p}{(}\PYG{n+nv}{highlight\PYGZhy{}syntax} \PYG{n+nv+vg}{*generator*}\PYG{p}{)}
           \PYG{p}{(}\PYG{n+nv}{\PYGZlt{}:link} \PYG{l+s+ss}{:rel} \PYG{l+s}{\PYGZdq{}stylesheet\PYGZdq{}}
                   \PYG{l+s+ss}{:href} \PYG{l+s}{\PYGZdq{}https://cdn.jsdelivr.net/gh/highlightjs/cdn\PYGZhy{}release@10.0.3/build/styles/default.min.css\PYGZdq{}}\PYG{p}{)))}
        \PYG{p}{(}\PYG{n+nv}{\PYGZlt{}:body}
         \PYG{p}{(}\PYG{n+nv}{\PYGZlt{}:div} \PYG{l+s+ss}{:class} \PYG{l+s}{\PYGZdq{}qbook\PYGZdq{}} \PYG{o}{,@}\PYG{n+nv}{body}\PYG{p}{)}
         \PYG{p}{(}\PYG{n+nb}{when} \PYG{p}{(}\PYG{n+nv}{highlight\PYGZhy{}syntax} \PYG{n+nv+vg}{*generator*}\PYG{p}{)}
           \PYG{p}{(}\PYG{n+nv}{\PYGZlt{}:script} \PYG{l+s+ss}{:src} \PYG{l+s}{\PYGZdq{}https://cdn.jsdelivr.net/gh/highlightjs/cdn\PYGZhy{}release@10.0.3/build/highlight.min.js\PYGZdq{}}\PYG{p}{)}
           \PYG{p}{(}\PYG{n+nv}{\PYGZlt{}:script} \PYG{l+s+ss}{:src} \PYG{l+s}{\PYGZdq{}https://cdn.jsdelivr.net/gh/highlightjs/cdn\PYGZhy{}release@10.0.3/build/languages/lisp.min.js\PYGZdq{}}\PYG{p}{)}
           \PYG{p}{(}\PYG{n+nv}{\PYGZlt{}:script} \PYG{l+s}{\PYGZdq{}hljs.initHighlightingOnLoad();\PYGZdq{}}\PYG{p}{))}
         \PYG{p}{)))))}
\end{Verbatim}
